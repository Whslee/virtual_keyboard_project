import cv2
import time

def Click_effect(fingertip, keyboardImage):

    #PlaySound(TEXT("WavFiles/mouseclick.wav"), NULL, SND_ASYNC)
    #winsound.PlaySound('WavFiles/mouseclick.wav', winsound.SND_FILENAME)
    if(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (100, 60), (150, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (150, 60), (200, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (200, 60), (250, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (250, 60), (300, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (340, 60), (390, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (390, 60), (440, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (440, 60), (490, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 60) and (fingertip[1] < 110):
        cv2.rectangle(keyboardImage, (490, 60), (540, 110), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (100, 110), (150, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (150, 110), (200, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (200, 110), (250, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (250, 110), (300, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (340, 110), (390, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (390, 110), (440, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (440, 110), (490, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 110) and (fingertip[1] < 160):
        cv2.rectangle(keyboardImage, (490, 110), (540, 160), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (100, 160), (150, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (150, 160), (200, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (200, 160), (250, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (250, 160), (300, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (340, 160), (390, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (390, 160), (440, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (440, 160), (490, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 160) and (fingertip[1] < 210):
        cv2.rectangle(keyboardImage, (490, 160), (540, 210), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (100, 210), (150, 260), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (150, 210), (200, 260), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (200, 210), (250, 260), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (250, 210), (300, 260), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (340, 210), (390, 260), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (390, 210), (440, 260), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (440, 210), (490, 260), (255, 255, 255), -1, 8, 0)
    elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 210) and (fingertip[1] < 260):
        cv2.rectangle(keyboardImage, (490, 210), (540, 260), (255, 255, 255), -1, 8, 0)
    else:
        curr_click = 32
        
    return keyboardImage    

def Select_alphabet(curr_click, layer_select):
    key_str_layer = ['K', 'M', 'H', 'U', 'Z', 'W', 'G', 'U', 
    'C', 'N', 'E', 'A', 'P', 'F', 'E', 'A', 
    'D', 'R', 'T', 'I', 'Q', 'Y', 'T', 'I', 
    'B', 'S', 'L', 'O', 'X', 'V', 'J', 'O']
    curr_str = key_str_layer[curr_click]
    
    return curr_str

def Virtualkeyboard_4x4_select(fingertip, tipClose):
    dell_click = 0
    reset_click = 0 
    curr_click = 32
    
    if(tipClose == 1):
        if(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 0
        elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 1
        elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 2
        elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 3
        elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 4
        elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 5
        elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 6
        elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 60) and (fingertip[1] < 110):
            curr_click = 7
        elif(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 8
        elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 9
        elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 10
        elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 11
        elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 12
        elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 13
        elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 14
        elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 110) and (fingertip[1] < 160):
            curr_click = 15
        elif(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 16
        elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 17
        elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 18
        elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 19
        elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 20
        elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 21
        elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 22
        elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 160) and (fingertip[1] < 210):
            curr_click = 23
        elif(fingertip[0] >= 100) and (fingertip[0] < 150) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 24
        elif(fingertip[0] >= 150) and (fingertip[0] < 200) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 25
        elif(fingertip[0] >= 200) and (fingertip[0] < 250) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 26
        elif(fingertip[0] >= 250) and (fingertip[0] < 300) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 27
        elif(fingertip[0] >= 340) and (fingertip[0] < 390) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 28
        elif(fingertip[0] >= 390) and (fingertip[0] < 440) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 29
        elif(fingertip[0] >= 440) and (fingertip[0] < 490) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 30
        elif(fingertip[0] >= 490) and (fingertip[0] < 540) and (fingertip[1] >= 210) and (fingertip[1] < 260):
            curr_click = 31
        else:
            curr_click = 32
    return curr_click, reset_click, dell_click
    
def Virtualkeyboard_4x4_draw_layer(keyboardImage, display_str):
    # 왼쪽아래 학교표시
    cv2.rectangle(keyboardImage, (15, 430), (155, 460), (100, 0, 0), -1, 8, 0)
    cv2.rectangle(keyboardImage, (15, 430), (155, 460), (255, 255, 0), 1, 8, 0)
    cv2.putText(keyboardImage, "SNU, CAPP Lab.", (20, 450), cv2.FONT_HERSHEY_COMPLEX_SMALL, 0.7, (255, 255, 0), 1, cv2.LINE_AA) 
    
    #Display string
    cv2.rectangle(keyboardImage, (40, 8), (600, 52), (255, 255, 255), -1, 8, 0)
    cv2.rectangle(keyboardImage, (40, 8), (600, 52), (0, 255, 0), 1, 8, 0)
    cv2.putText(keyboardImage, display_str, (50, 38), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 50, 50), 2, cv2.LINE_AA)
    
    #Keyboard layer
    cv2.rectangle(keyboardImage, (100, 60), (300, 260), (255, 255, 255), 1, 8, 0)
    cv2.rectangle(keyboardImage, (340, 60), (540, 260), (255, 255, 255), 1, 8, 0)
    cv2.line(keyboardImage, (100, 110), (300, 110), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (100, 160), (300, 160), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (100, 210), (300, 210), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (150, 60), (150, 260), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (200, 60), (200, 260), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (250, 60), (250, 260), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (300, 60), (300, 260), (255, 255, 255), 1, 0, 0)
    
    cv2.line(keyboardImage, (340, 110), (540, 110), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (340, 160), (540, 160), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (340, 210), (540, 210), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (390, 60), (390, 260), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (440, 60), (440, 260), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (490, 60), (490, 260), (255, 255, 255), 1, 0, 0)
    cv2.line(keyboardImage, (540, 60), (540, 260), (255, 255, 255), 1, 0, 0)
    
    cv2.putText(keyboardImage, "K    M    H    U        Z    W    G    U", (115, 90), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 2, cv2.LINE_AA)
    cv2.putText(keyboardImage, "C    N    E    A         P    F     E    A", (115, 140), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 2, cv2.LINE_AA)
    cv2.putText(keyboardImage, "D    R    T    I         Q    Y    T    I", (115, 190), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 2, cv2.LINE_AA)
    cv2.putText(keyboardImage, "B    S    L    O         X    V   J    O", (115, 240), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 2, cv2.LINE_AA)
    
    cv2.putText(keyboardImage, "K    M    H    U        Z    W    G    U", (115, 90), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 1, cv2.LINE_AA)
    cv2.putText(keyboardImage, "C    N    E    A         P    F     E    A", (115, 140), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 1, cv2.LINE_AA)
    cv2.putText(keyboardImage, "D    R    T    I         Q    Y    T    I", (115, 190), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 1, cv2.LINE_AA)
    cv2.putText(keyboardImage, "B    S    L    O         X    V   J    O", (115, 240), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 0), 1, cv2.LINE_AA)
    
    return keyboardImage
    
if __name__=='__main__':
    videoFile = 'hand_twofinger.mp4'
    cap = cv2.VideoCapture(videoFile)
    if (cap.isOpened()==False):
        print('Can not open capture !!!')
    
    # Define the codec ) and ( create VideoWriter object
    fourcc = cv2.VideoWriter_fourcc(*'mp4v')
    out = cv2.VideoWriter('result_vid/hand_twofinger.mp4', fourcc, 20.0, (640,480))
    
    frameNum = 0

    final_str = []
    start_time = time.time()
    curr_click = 32
    prev_click = 0
    stay_count = 0
    
    while(cap.isOpened()):
        ret, frame = cap.read()
            
        if ret is False:
            break
        
        keyboardImage = frame.copy()
        print("Frame number:", frameNum)

        #Get the index_finger coordinate and keyboard layer information, click signal generation
        if (frameNum <= 50):
            index_finger = (245, 200)
        elif (frameNum == 51) or (frameNum == 52) or (frameNum == 53) or (frameNum == 54):
            index_finger = (325, 200)
        else:
            index_finger = (400, 80)
            
        layer = [1, 2, 3]
        layer_select = layer[2]
        tipClose = 1
        
        #Select the virtual keyboard and the alphabet by index finger coordinate
        curr_click, reset_click, dell_click = Virtualkeyboard_4x4_select(index_finger, tipClose)
        print("curr_click: ", curr_click)
        print("prev_click: ", prev_click)
        
        #To see whether the index_finger coordinate moved
        if (curr_click != prev_click) and (frameNum != 0):
            move_key = 1
        else:
            move_key = 0
        print ("move_key:", move_key)
        
        if (move_key == 1):
            stay_count = 0
        else:
            stay_count += 1
        print('stay_count: ',stay_count)
        
         
        if (stay_count == 3) and (dell_click == 0) and (reset_click == 0) and (curr_click < 32):
            curr_str = Select_alphabet(curr_click, layer_select)
            final_str.append(curr_str)
            print(final_str)
        
        if (reset_click == 1):
            final_str.clear()
        
        if (dell_click == 1):
            print(final_str)
            final_str = final_str[:-1]
            print(final_str)
        
        prev_click = curr_click


        if (stay_count == 3) and ((reset_click == 1) or (dell_click == 1)):
            keyboardImage = Click_effect(index_finger, keyboardImage)
        
        #Draw the keyboard layer and monitor selected string
        display_str = ''.join(final_str)
        keyboardImage = Virtualkeyboard_4x4_draw_layer(keyboardImage, display_str)
        print(display_str)
        #Display typing result
        cv2.imshow("keyboardImage", keyboardImage)
        
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
        
        # Save by jpg frame
        #cv2.imwrite(f"air3_output/{frameNum}.jpg", keyboardImage)
        
        # Write video
        #out.write(keyboardImage)
        
        frameNum += 1
             
    cap.release()
    cv2.destroyAllWindows()
    end_time = time.time()
    run_time = end_time - start_time
    print("Runtime:", run_time)
